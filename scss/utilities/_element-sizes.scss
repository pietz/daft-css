@use "sass:map";
@use "../settings" as *;

// Mixins for element size utilities - declared outside control directives

// Mixin to generate size variants for buttons
@mixin button-size-variant($size, $padding-v, $padding-h) {
  // Direct application and container-based application in one rule
  &.#{$size},
  .#{$size} &:not(.#{if($size == "small", "large", "small")}) {
    padding: $padding-v $padding-h;
  }
}

// Mixin to generate size variants for form elements
@mixin form-element-size-variant(
  $size,
  $spacing-v,
  $spacing-h,
  $height-multiplier
) {
  &.#{$size}:not(
      [type="checkbox"],
      [type="radio"],
      [type="range"],
      [type="file"]
    ),
  .#{$size}
    &:not([type="checkbox"], [type="radio"], [type="range"], [type="file"]):not(
      .#{if($size == "small", "large", "small")}
    ) {
    #{$css-var-prefix}form-element-spacing-vertical: $spacing-v;
    #{$css-var-prefix}form-element-spacing-horizontal: $spacing-h;
    padding: var(#{$css-var-prefix}form-element-spacing-vertical)
      var(#{$css-var-prefix}form-element-spacing-horizontal);
  }

  // Height adjustment for inputs
  &.#{$size}:not([type="checkbox"], [type="radio"], [type="range"]),
  .#{$size}
    &:not([type="checkbox"], [type="radio"], [type="range"]):not(
      .#{if($size == "small", "large", "small")}
    ) {
    height: calc(
      (1rem * var(#{$css-var-prefix}line-height)) + ($height-multiplier * 2) +
        (var(#{$css-var-prefix}border-width) * 2)
    );
  }
}

// Mixin for select elements with chevron
@mixin select-size-variant($size, $padding-side, $padding-calc) {
  &.#{$size}:not([multiple], [size]),
  .#{$size}
    &:not([multiple], [size]):not(.#{if($size == "small", "large", "small")}) {
    padding-right: calc($padding-calc + 1.5rem);
    padding-left: $padding-calc;
    padding-inline-start: $padding-side;
    padding-inline-end: calc($padding-calc + 1.5rem);
  }
}

// Mixin for search inputs with icon
@mixin search-size-variant($size, $padding-start) {
  &.#{$size}[type="search"],
  .#{$size} &[type="search"]:not(.#{if($size == "small", "large", "small")}) {
    padding-inline-start: calc($padding-start);
  }
}

@if $enable-classes and
  (map.get($modules, "content/button") or map.get($modules, "forms/basic"))
{
  /**
   * Element size utilities
   */

  // Button size variants
  #{$parent-selector} button,
  #{$parent-selector} [type="submit"],
  #{$parent-selector} [type="button"],
  #{$parent-selector} [type="reset"],
  #{$parent-selector} [role="button"] {
    @include button-size-variant(
      "small",
      calc(var(#{$css-var-prefix}spacing) * 0.25),
      calc(var(#{$css-var-prefix}spacing) * 0.5)
    );

    @include button-size-variant(
      "large",
      var(#{$css-var-prefix}spacing),
      calc(var(#{$css-var-prefix}spacing) * 2)
    );
  }

  // Form element size variants
  #{$parent-selector} input,
  #{$parent-selector} select,
  #{$parent-selector} textarea {
    @include form-element-size-variant(
      "small",
      calc(var(#{$css-var-prefix}spacing) * 0.25),
      calc(var(#{$css-var-prefix}spacing) * 0.5),
      calc(var(#{$css-var-prefix}spacing) * 0.25)
    );

    @include form-element-size-variant(
      "large",
      calc(var(#{$css-var-prefix}spacing) * 0.75),
      calc(var(#{$css-var-prefix}spacing) * 1.5),
      var(#{$css-var-prefix}spacing)
    );
  }

  // Select specific adjustments
  #{$parent-selector} select {
    @include select-size-variant(
      "small",
      var(#{$css-var-prefix}form-element-spacing-horizontal-small),
      calc(var(#{$css-var-prefix}spacing) * 0.5)
    );

    @include select-size-variant(
      "large",
      var(#{$css-var-prefix}form-element-spacing-horizontal-large),
      calc(var(#{$css-var-prefix}spacing) * 2)
    );
  }

  // Search input specific adjustments
  #{$parent-selector} input {
    @include search-size-variant(
      "small",
      var(#{$css-var-prefix}form-element-spacing-horizontal) + 1.5rem
    );

    @include search-size-variant(
      "large",
      var(#{$css-var-prefix}form-element-spacing-horizontal) + 2.25rem
    );
  }

  // Special handling for groups
  @if map.get($modules, "components/group") {
    #{$parent-selector} [role="search"],
    #{$parent-selector} [role="group"] {
      &.small {
        button,
        [type="submit"],
        [type="button"],
        [role="button"] {
          #{$css-var-prefix}form-element-spacing-horizontal: 0.75rem;
        }
      }

      &.large {
        button,
        [type="submit"],
        [type="button"],
        [role="button"] {
          #{$css-var-prefix}form-element-spacing-horizontal: 1.25rem;
        }
      }
    }
  }
}
