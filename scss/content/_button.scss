@use "sass:map";
@use "../settings" as *;
@use "../helpers/mixins" as *;

@if map.get($modules, "content/button") {
  /**
   * Button
   */

  // Reboot based on :
  // - normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css
  // - sanitize.css v13.0.0 | CC0 1.0 Universal | github.com/csstools/sanitize.css
  // ––––––––––––––––––––

  // 1. Change the font styles in all browsers
  // 2. Remove the margin on controls in Safari
  // 3. Show the overflow in Edge
  #{$parent-selector} button {
    margin: 0; // 2
    overflow: visible; // 3
    font-family: inherit; // 1
    text-transform: none; // 1
  }

  // Correct the inability to style buttons in iOS and Safari
  #{$parent-selector} button,
  #{$parent-selector} [type="submit"],
  #{$parent-selector} [type="reset"],
  #{$parent-selector} [type="button"] {
    -webkit-appearance: button;
  }

  // Pico
  // ––––––––––––––––––––

  #{$parent-selector} button,
  #{$parent-selector} [type="submit"],
  #{$parent-selector} [type="reset"],
  #{$parent-selector} [type="button"],
  #{$parent-selector} [type="file"]::file-selector-button,
  #{$parent-selector} [role="button"] {
    @include interactive-element-base;

    // Button-specific overrides
    #{$css-var-prefix}background-color: var(#{$css-var-prefix}primary);
    #{$css-var-prefix}border-color: var(#{$css-var-prefix}primary);
    #{$css-var-prefix}color: var(#{$css-var-prefix}primary-inverse);
    #{$css-var-prefix}box-shadow: var(
      #{$css-var-prefix}button-box-shadow,
      0 0 0 rgba(0, 0, 0, 0)
    );

    // Button-specific styles
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    user-select: none;

    &:is([aria-current]:not([aria-current="false"])),
    &:is(:hover, :active, :focus) {
      #{$css-var-prefix}background-color: var(#{$css-var-prefix}primary-hover);
      #{$css-var-prefix}border-color: var(#{$css-var-prefix}primary-hover);
      #{$css-var-prefix}box-shadow: var(
        #{$css-var-prefix}button-hover-box-shadow,
        0 0 0 rgba(0, 0, 0, 0)
      );
      #{$css-var-prefix}color: var(#{$css-var-prefix}primary-inverse);
    }

    &:focus,
    &:is([aria-current]:not([aria-current="false"])):focus {
      #{$css-var-prefix}box-shadow:
        var(#{$css-var-prefix}button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)),
        0
          0
          0
          var(#{$css-var-prefix}outline-width)
          var(#{$css-var-prefix}primary);
    }
  }

  #{$parent-selector} [type="submit"],
  #{$parent-selector} [type="reset"],
  #{$parent-selector} [type="button"] {
    margin-bottom: var(#{$css-var-prefix}spacing);
  }

  // .secondary, .contrast & .outline
  @if $enable-classes {
    // Secondary
    #{$parent-selector}
      :is(button, [type="submit"], [type="button"], [role="button"]).secondary,
    #{$parent-selector} [type="reset"],
    #{$parent-selector} [type="file"]::file-selector-button {
      #{$css-var-prefix}background-color: var(
        #{$css-var-prefix}background-subtle
      );
      #{$css-var-prefix}border-color: var(#{$css-var-prefix}border);
      #{$css-var-prefix}color: var(#{$css-var-prefix}text);
      cursor: pointer;

      &:is(
          [aria-current]:not([aria-current="false"]),
          :hover,
          :active,
          :focus
        ) {
        #{$css-var-prefix}background-color: var(
          #{$css-var-prefix}background-muted
        );
        #{$css-var-prefix}border-color: var(#{$css-var-prefix}border);
        #{$css-var-prefix}color: var(#{$css-var-prefix}text);
      }

      &:focus,
      &:is([aria-current]:not([aria-current="false"])):focus {
        #{$css-var-prefix}box-shadow:
          var(
            #{$css-var-prefix}button-hover-box-shadow,
            0 0 0 rgba(0, 0, 0, 0)
          ),
          0
            0
            0
            var(#{$css-var-prefix}outline-width)
            var(#{$css-var-prefix}border);
      }
    }

    // Contrast
    #{$parent-selector}
      :is(button, [type="submit"], [type="button"], [role="button"]).contrast {
      #{$css-var-prefix}background-color: var(#{$css-var-prefix}text);
      #{$css-var-prefix}border-color: var(#{$css-var-prefix}text);
      #{$css-var-prefix}color: var(#{$css-var-prefix}background);

      &:is(
          [aria-current]:not([aria-current="false"]),
          :hover,
          :active,
          :focus
        ) {
        #{$css-var-prefix}background-color: color-mix(
          in srgb,
          var(#{$css-var-prefix}text),
          transparent 10%
        );
        #{$css-var-prefix}border-color: var(#{$css-var-prefix}text-muted);
        #{$css-var-prefix}color: var(#{$css-var-prefix}background);
      }

      &:focus,
      &:is([aria-current]:not([aria-current="false"])):focus {
        #{$css-var-prefix}box-shadow:
          var(
            #{$css-var-prefix}button-hover-box-shadow,
            0 0 0 rgba(0, 0, 0, 0)
          ),
          0
            0
            0
            var(#{$css-var-prefix}outline-width)
            var(#{$css-var-prefix}text);
      }
    }

    // Outline (primary)
    #{$parent-selector}
      :is(button, [type="submit"], [type="button"], [role="button"]).outline,
    [type="reset"].outline {
      #{$css-var-prefix}background-color: transparent;
      #{$css-var-prefix}color: var(#{$css-var-prefix}primary);
      #{$css-var-prefix}border-color: var(#{$css-var-prefix}primary);

      &:is(
          [aria-current]:not([aria-current="false"]),
          :hover,
          :active,
          :focus
        ) {
        #{$css-var-prefix}background-color: transparent;
        #{$css-var-prefix}color: var(#{$css-var-prefix}primary-hover);
        #{$css-var-prefix}border-color: var(#{$css-var-prefix}primary-hover);
      }
    }

    // Outline (secondary)
    #{$parent-selector}
      :is(
        button,
        [type="submit"],
        [type="button"],
        [role="button"]
      ).outline.secondary,
    [type="reset"].outline {
      #{$css-var-prefix}color: var(#{$css-var-prefix}text);
      #{$css-var-prefix}border-color: var(
        #{$css-var-prefix}form-element-border-color
      );

      &:is(
          [aria-current]:not([aria-current="false"]),
          :hover,
          :active,
          :focus
        ) {
        #{$css-var-prefix}color: var(#{$css-var-prefix}text);
        #{$css-var-prefix}border-color: var(#{$css-var-prefix}background-muted);
      }
    }

    // Outline (contrast)
    #{$parent-selector}
      :is(
        button,
        [type="submit"],
        [type="button"],
        [role="button"]
      ).outline.contrast {
      #{$css-var-prefix}color: var(#{$css-var-prefix}text);
      #{$css-var-prefix}border-color: var(#{$css-var-prefix}text);

      &:is(
          [aria-current]:not([aria-current="false"]),
          :hover,
          :active,
          :focus
        ) {
        #{$css-var-prefix}color: var(#{$css-var-prefix}text);
        #{$css-var-prefix}border-color: var(#{$css-var-prefix}text);
      }
    }
  } @else {
    // Secondary button without .class
    #{$parent-selector} [type="reset"],
    #{$parent-selector} [type="file"]::file-selector-button {
      #{$css-var-prefix}background-color: var(
        #{$css-var-prefix}background-subtle
      );
      #{$css-var-prefix}border-color: var(#{$css-var-prefix}border);
      #{$css-var-prefix}color: var(#{$css-var-prefix}text);
      cursor: pointer;

      &:is(
          [aria-current]:not([aria-current="false"]),
          :hover,
          :active,
          :focus
        ) {
        #{$css-var-prefix}background-color: var(
          #{$css-var-prefix}background-muted
        );
        #{$css-var-prefix}border-color: var(#{$css-var-prefix}border);
        #{$css-var-prefix}color: var(#{$css-var-prefix}text);
      }

      &:focus {
        #{$css-var-prefix}box-shadow:
          var(
            #{$css-var-prefix}button-hover-box-shadow,
            0 0 0 rgba(0, 0, 0, 0)
          ),
          0
            0
            0
            var(#{$css-var-prefix}outline-width)
            var(#{$css-var-prefix}border);
      }
    }
  }

  // Button [disabled]
  #{$parent-selector}
    :where(
      button,
      [type="submit"],
      [type="reset"],
      [type="button"],
      [role="button"]
    )[disabled],
  #{$parent-selector}
    :where(fieldset[disabled])
    :is(
      button,
      [type="submit"],
      [type="button"],
      [type="reset"],
      [role="button"]
    ) {
    @include interactive-element-disabled;
  }
}
